{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        scriptTags(first: 5) {\\n            edges {\\n                node {\\n                    id\\n                    src\\n                    displayScope\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagDelete($id: ID!) {\\n        scriptTagDelete(id: $id) {\\n            deletedScriptTagId\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input: ScriptTagInput!) {\\n        scriptTagCreate(input: $input) {\\n            scriptTag {\\n                id\\n            }\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }       \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button, Card, Checkbox, ColorPicker, DatePicker, EmptyState, Layout, Page, InlineError, RadioButton, ResourceList, Stack, TextField, Popover, RangeSlider } from \"@shopify/polaris\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport Link from 'next/link';\nimport axios from 'axios';\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar DELETE_SCRIPT_TAG = gql(_templateObject2());\nvar QUERY_SCRIPTTAGS = gql(_templateObject3());\n\nvar Initial = function Initial() {\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var res;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get('https://d7fc8e16.ngrok.io/api/scripts'));\n\n            case 2:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    fetchConfig(fetchData().data);\n  }, []);\n\n  var _useState = useState([]),\n      config = _useState[0],\n      fetchConfig = _useState[1];\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScript = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPT_TAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScript = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState2 = useState(false),\n      initBar = _useState2[0],\n      setInitBar = _useState2[1];\n\n  var _useState3 = useState('Timer'),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var _useState4 = useState({\n    month: 4,\n    year: 2020\n  }),\n      _useState4$ = _useState4[0],\n      month = _useState4$.month,\n      year = _useState4$.year,\n      setDate = _useState4[1];\n\n  var _useState5 = useState({\n    endMonth: 6,\n    endYear: 2020\n  }),\n      _useState5$ = _useState5[0],\n      endMonth = _useState5$.endMonth,\n      endYear = _useState5$.endYear,\n      setSecondDate = _useState5[1];\n\n  var _useState6 = useState({\n    start: new Date()\n  }),\n      selectedStartDate = _useState6[0],\n      setSelectedStartDate = _useState6[1];\n\n  var _useState7 = useState({\n    end: new Date('Wed Aug 08 2020 00:00:00 GMT-0300 (EST)')\n  }),\n      selectedEndDate = _useState7[0],\n      setSelectedEndDate = _useState7[1];\n\n  var handleMonthChange = useCallback(function (month, year) {\n    return setDate({\n      month: month,\n      year: year\n    });\n  }, []);\n  var handleEndMonthChange = useCallback(function (endMonth, endYear) {\n    return setSecondDate({\n      endMonth: endMonth,\n      endYear: endYear\n    });\n  }, []);\n\n  var _useState8 = useState('Top'),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var _useState9 = useState(false),\n      checked = _useState9[0],\n      setChecked = _useState9[1];\n\n  var _useState10 = useState({\n    hue: 1,\n    saturation: 1,\n    brightness: 1,\n    alpha: 1\n  }),\n      bgColor = _useState10[0],\n      setBgColor = _useState10[1];\n\n  var _useState11 = useState({\n    hue: 1,\n    saturation: 1,\n    brightness: 1,\n    alpha: 1\n  }),\n      borderColor = _useState11[0],\n      setBorderColor = _useState11[1];\n\n  var handleChange = useCallback(function (_checked, newValue) {\n    return setValue(newValue);\n  }, []);\n\n  var _useState12 = useState(true),\n      popoverActive = _useState12[0],\n      setPopoverActive = _useState12[1];\n\n  var _useState13 = useState(true),\n      borderPopover = _useState13[0],\n      setBorderPopover = _useState13[1];\n\n  var togglePopoverActive = useCallback(function () {\n    return setPopoverActive(function (popoverActive) {\n      return !popoverActive;\n    });\n  }, []);\n  var toggleBorderPopover = useCallback(function () {\n    return setBorderPopover(function (popoverActive) {\n      return !popoverActive;\n    });\n  }, []);\n\n  var activator = __jsx(Button, {\n    onClick: togglePopoverActive,\n    disclosure: true\n  }, \"Background color\");\n\n  var borderActivator = __jsx(Button, {\n    onClick: toggleBorderPopover,\n    disclosure: true\n  }, \"Border color\");\n\n  var _useState14 = useState(0),\n      rangeValue = _useState14[0],\n      setRangeValue = _useState14[1];\n\n  var handleRangeSliderChange = useCallback(function (value) {\n    return setRangeValue(value);\n  }, []);\n\n  var handleSubmit = function handleSubmit() {\n    var res;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            createScript({\n              variables: {\n                input: {\n                  src: \"https://d7fc8e16.ngrok.io/script.js\",\n                  displayScope: \"ALL\"\n                },\n                refetchQueries: [{\n                  query: QUERY_SCRIPTTAGS\n                }]\n              }\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('https://d7fc8e16.ngrok.io/api/scripts', {\n              name: name,\n              startDate: selectedStartDate,\n              endDate: selectedEndDate,\n              position: value,\n              sticky: checked,\n              backGroundColor: bgColor,\n              borderSize: rangeValue,\n              borderColor: borderColor\n            }));\n\n          case 3:\n            res = _context2.sent;\n            console.log(res);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var deleteSubmit = function deleteSubmit() {\n    deleteScript({\n      variables: {\n        id: data.scriptTags.edges[0].node.id,\n        refetchQueries: [{\n          query: QUERY_SCRIPTTAGS\n        }]\n      }\n    });\n    axios[\"delete\"]('https://d7fc8e16.ngrok.io/api/scripts').then(function (res) {\n      console.log(res);\n    });\n  };\n\n  if (!!loading) return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: '100%',\n      fontSize: '30px',\n      fontWeight: '700'\n    }\n  }, \"LOADING...\");\n  if (!!error) return __jsx(\"div\", null, error.message);\n  return __jsx(Page, null, !initBar && __jsx(Layout, null, !data.scriptTags.edges.length && __jsx(Layout.Section, null, __jsx(EmptyState, {\n    heading: \"Time Banner\",\n    image: 'https://sct.spur-i-t.com/img/icons/empty-state.svg'\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: function onClick() {\n      setInitBar(true);\n    }\n  }, \"Create Bar\"))), !!config && __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Existing Banner:\",\n    sectioned: true\n  }, __jsx(\"p\", null, config.name), __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: deleteSubmit\n  }, \"Delete Banner\")))), initBar && __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: 'Banner name:',\n    sectioned: true\n  }, __jsx(TextField, {\n    label: 'name',\n    value: name,\n    onChange: function onChange(value) {\n      setName(value);\n    },\n    error: !name ? 'Please enter name' : ''\n  })), __jsx(Card, {\n    title: 'Start time',\n    sectioned: true\n  }, __jsx(DatePicker, {\n    month: month,\n    year: year,\n    onChange: setSelectedStartDate,\n    onMonthChange: handleMonthChange,\n    selected: selectedStartDate\n  })), __jsx(Card, {\n    title: 'End Time',\n    sectioned: true\n  }, __jsx(DatePicker, {\n    month: endMonth,\n    year: endYear,\n    onChange: setSelectedEndDate,\n    onMonthChange: handleEndMonthChange,\n    selected: selectedEndDate,\n    size: 'slim'\n  })), __jsx(Card, {\n    title: 'Timer display',\n    sectioned: true\n  }, __jsx(Stack, {\n    vertical: true\n  }, __jsx(RadioButton, {\n    label: \"Top\",\n    helpText: \"Displays timer at the top of the store.\",\n    checked: value === 'Top',\n    id: 'Top',\n    name: \"Top\",\n    onChange: handleChange\n  }), __jsx(RadioButton, {\n    label: \"Bottom\",\n    helpText: \"Displays timer at the bottom of the store.\",\n    id: \"Bottom\",\n    name: \"Bottom\",\n    checked: value === 'Bottom',\n    onChange: handleChange\n  })), __jsx(Checkbox, {\n    label: \"Display sticky\",\n    checked: checked,\n    onChange: function onChange(newChecked) {\n      setChecked(newChecked);\n    }\n  })), __jsx(Card, {\n    title: 'Timer design',\n    sectioned: true\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      width: '100%'\n    }\n  }, __jsx(\"div\", null, __jsx(\"p\", {\n    style: {\n      marginBottom: '10px'\n    }\n  }, \"Background color:\"), __jsx(Popover, {\n    active: popoverActive,\n    activator: activator,\n    onClose: togglePopoverActive,\n    fluidContent: true,\n    sectioned: true\n  }, __jsx(ColorPicker, {\n    color: bgColor,\n    onChange: setBgColor\n  })), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '40px',\n      borderRadius: '5px',\n      backgroundColor: \"hsla(\".concat(bgColor.hue, \", \").concat(bgColor.saturation * 100, \"%, \").concat(bgColor.brightness * 100, \"%, \").concat(bgColor.alpha, \")\"),\n      marginTop: '10px'\n    }\n  })), __jsx(\"div\", null, __jsx(RangeSlider, {\n    label: \"Border size:\",\n    value: rangeValue,\n    onChange: handleRangeSliderChange,\n    min: 0,\n    max: 12,\n    output: true\n  })), __jsx(\"div\", null, __jsx(\"p\", {\n    style: {\n      marginBottom: '10px'\n    }\n  }, \"Border color:\"), __jsx(Popover, {\n    active: borderPopover,\n    activator: borderActivator,\n    onClose: toggleBorderPopover,\n    fluidContent: true,\n    sectioned: true\n  }, __jsx(ColorPicker, {\n    color: borderColor,\n    onChange: setBorderColor\n  })), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '40px',\n      borderRadius: '5px',\n      backgroundColor: \"hsla(\".concat(borderColor.hue, \", \").concat(borderColor.saturation * 100, \"%, \").concat(borderColor.brightness * 100, \"%, \").concat(borderColor.alpha, \")\"),\n      marginTop: '10px'\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginTop: '25px'\n    }\n  }, __jsx(Link, {\n    href: '/success'\n  }, __jsx(Button, {\n    primary: true,\n    size: \"large\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    disabled: !name\n  }, \"Save\"))))));\n};\n\nexport default Initial;","map":{"version":3,"sources":["D:/JSprojects/nextShopify/pages/index.js"],"names":["gql","useQuery","useMutation","Button","Card","Checkbox","ColorPicker","DatePicker","EmptyState","Layout","Page","InlineError","RadioButton","ResourceList","Stack","TextField","Popover","RangeSlider","useCallback","useState","useEffect","Link","axios","CREATE_SCRIPT_TAG","DELETE_SCRIPT_TAG","QUERY_SCRIPTTAGS","Initial","fetchData","get","res","data","fetchConfig","config","createScript","deleteScript","loading","error","initBar","setInitBar","name","setName","month","year","setDate","endMonth","endYear","setSecondDate","start","Date","selectedStartDate","setSelectedStartDate","end","selectedEndDate","setSelectedEndDate","handleMonthChange","handleEndMonthChange","value","setValue","checked","setChecked","hue","saturation","brightness","alpha","bgColor","setBgColor","borderColor","setBorderColor","handleChange","_checked","newValue","popoverActive","setPopoverActive","borderPopover","setBorderPopover","togglePopoverActive","toggleBorderPopover","activator","borderActivator","rangeValue","setRangeValue","handleRangeSliderChange","handleSubmit","variables","input","src","displayScope","refetchQueries","query","post","startDate","endDate","position","sticky","backGroundColor","borderSize","console","log","deleteSubmit","id","scriptTags","edges","node","then","display","justifyContent","alignItems","width","height","fontSize","fontWeight","message","length","newChecked","marginBottom","borderRadius","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\"\r\nimport {useQuery, useMutation} from \"@apollo/react-hooks\"\r\nimport {\r\n    Button,\r\n    Card, Checkbox, ColorPicker,\r\n    DatePicker,\r\n    EmptyState,\r\n    Layout,\r\n    Page, InlineError,\r\n    RadioButton,\r\n    ResourceList, Stack,\r\n    TextField, Popover, RangeSlider\r\n} from \"@shopify/polaris\";\r\nimport {useCallback, useState, useEffect} from \"react\";\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n    mutation scriptTagCreate($input: ScriptTagInput!) {\r\n        scriptTagCreate(input: $input) {\r\n            scriptTag {\r\n                id\r\n            }\r\n            userErrors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }       \r\n`;\r\n\r\nconst DELETE_SCRIPT_TAG = gql`\r\n    mutation scriptTagDelete($id: ID!) {\r\n        scriptTagDelete(id: $id) {\r\n            deletedScriptTagId\r\n            userErrors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst QUERY_SCRIPTTAGS = gql`\r\n    query {\r\n        scriptTags(first: 5) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    src\r\n                    displayScope\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Initial = () => {\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let res = await axios.get('https://d7fc8e16.ngrok.io/api/scripts');\r\n            return res.data\r\n        };\r\n        fetchConfig(fetchData().data)\r\n    }, []);\r\n\r\n    const [config, fetchConfig] = useState([]);\r\n    const [createScript] = useMutation(CREATE_SCRIPT_TAG);\r\n    const [deleteScript] = useMutation(DELETE_SCRIPT_TAG);\r\n    const {loading, error, data} = useQuery(QUERY_SCRIPTTAGS);\r\n    const [initBar, setInitBar] = useState(false);\r\n    const [name, setName] = useState('Timer');\r\n\r\n    const [{month, year}, setDate] = useState({\r\n        month: 4,\r\n        year: 2020,\r\n    });\r\n    const [{endMonth, endYear}, setSecondDate] = useState({\r\n        endMonth: 6,\r\n        endYear: 2020\r\n    });\r\n    const [selectedStartDate, setSelectedStartDate] = useState({\r\n        start: new Date(),\r\n    });\r\n    const [selectedEndDate, setSelectedEndDate] = useState({\r\n        end: new Date('Wed Aug 08 2020 00:00:00 GMT-0300 (EST)'),\r\n    });\r\n\r\n    const handleMonthChange = useCallback(\r\n        (month, year) => setDate({month, year}),\r\n        [],\r\n    );\r\n    const handleEndMonthChange = useCallback(\r\n        (endMonth, endYear) => setSecondDate({endMonth, endYear}),\r\n        [],\r\n    );\r\n\r\n    const [value, setValue] = useState('Top');\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const [bgColor, setBgColor] = useState({\r\n        hue: 1,\r\n        saturation: 1,\r\n        brightness: 1,\r\n        alpha: 1\r\n    });\r\n    const [borderColor, setBorderColor] = useState({\r\n        hue: 1,\r\n        saturation: 1,\r\n        brightness: 1,\r\n        alpha: 1\r\n    });\r\n\r\n    const handleChange = useCallback(\r\n        (_checked, newValue) => setValue(newValue),\r\n        [],\r\n    );\r\n\r\n    const [popoverActive, setPopoverActive] = useState(true);\r\n    const [borderPopover, setBorderPopover] = useState(true);\r\n\r\n    const togglePopoverActive = useCallback(() => setPopoverActive(popoverActive => !popoverActive), []);\r\n    const toggleBorderPopover = useCallback(() => setBorderPopover(popoverActive => !popoverActive), []);\r\n    const activator = <Button onClick={togglePopoverActive} disclosure>\r\n        Background\r\n        color\r\n    </Button>;\r\n    const borderActivator = <Button onClick={toggleBorderPopover} disclosure>\r\n        Border color\r\n    </Button>;\r\n\r\n    const [rangeValue, setRangeValue] = useState(0);\r\n\r\n    const handleRangeSliderChange = useCallback(\r\n        (value) => setRangeValue(value),\r\n        [],\r\n    );\r\n\r\n    const handleSubmit = async () => {\r\n        createScript({\r\n            variables: {\r\n                input: {\r\n                    src: \"https://d7fc8e16.ngrok.io/script.js\",\r\n                    displayScope: \"ALL\"\r\n                },\r\n                refetchQueries: [{query: QUERY_SCRIPTTAGS}]\r\n            }\r\n        });\r\n        let res = await axios.post('https://d7fc8e16.ngrok.io/api/scripts',\r\n            {\r\n                name,\r\n                startDate: selectedStartDate,\r\n                endDate: selectedEndDate,\r\n                position: value,\r\n                sticky: checked,\r\n                backGroundColor: bgColor,\r\n                borderSize: rangeValue,\r\n                borderColor,\r\n            });\r\n        console.log(res);\r\n    };\r\n\r\n    const deleteSubmit = () => {\r\n        deleteScript({\r\n            variables: {\r\n                id: data.scriptTags.edges[0].node.id,\r\n                refetchQueries: [{query: QUERY_SCRIPTTAGS}]\r\n            }\r\n        });\r\n        axios.delete('https://d7fc8e16.ngrok.io/api/scripts').then(res => {console.log(res)})\r\n    };\r\n\r\n    if (!!loading) return <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n        fontSize: '30px',\r\n        fontWeight: '700'\r\n    }}>LOADING...</div>;\r\n    if (!!error) return <div>{error.message}</div>;\r\n\r\n    return (\r\n        <Page>\r\n            {!initBar && <Layout>\r\n                {!(data.scriptTags.edges.length) && <Layout.Section>\r\n                    <EmptyState\r\n                        heading={\"Time Banner\"}\r\n                        image={'https://sct.spur-i-t.com/img/icons/empty-state.svg'}>\r\n                        <Button\r\n                            primary\r\n                            size={\"slim\"}\r\n                            type={\"submit\"}\r\n                            onClick={() => {\r\n                                setInitBar(true)\r\n                            }}\r\n                        >\r\n                            Create Bar\r\n                        </Button>\r\n                    </EmptyState>\r\n                </Layout.Section>}\r\n                {!!(config) && <Layout.Section>\r\n                    <Card title={\"Existing Banner:\"} sectioned>\r\n                        <p>{config.name}</p>\r\n                        <Button\r\n                            primary\r\n                            size={\"slim\"}\r\n                            type={\"submit\"}\r\n                            onClick={deleteSubmit}>\r\n                            Delete Banner\r\n                        </Button>\r\n                    </Card>\r\n                </Layout.Section>}\r\n            </Layout>}\r\n            {initBar && <Layout>\r\n                <Layout.Section>\r\n                    <Card title={'Banner name:'} sectioned>\r\n                        <TextField\r\n                            label={'name'}\r\n                            value={name}\r\n                            onChange={(value) => {setName(value)}}\r\n                            error={(!name)?'Please enter name':''}\r\n                        />\r\n                    </Card>\r\n                    <Card title={'Start time'} sectioned>\r\n                        <DatePicker\r\n                            month={month}\r\n                            year={year}\r\n                            onChange={setSelectedStartDate}\r\n                            onMonthChange={handleMonthChange}\r\n                            selected={selectedStartDate}\r\n                        />\r\n                    </Card>\r\n                    <Card title={'End Time'} sectioned>\r\n                        <DatePicker\r\n                            month={endMonth}\r\n                            year={endYear}\r\n                            onChange={setSelectedEndDate}\r\n                            onMonthChange={handleEndMonthChange}\r\n                            selected={selectedEndDate}\r\n                            size={'slim'}\r\n                        />\r\n                    </Card>\r\n                    <Card title={'Timer display'} sectioned>\r\n                        <Stack vertical>\r\n                            <RadioButton\r\n                                label=\"Top\"\r\n                                helpText=\"Displays timer at the top of the store.\"\r\n                                checked={value === 'Top'}\r\n                                id={'Top'}\r\n                                name=\"Top\"\r\n                                onChange={handleChange}\r\n                            />\r\n                            <RadioButton\r\n                                label=\"Bottom\"\r\n                                helpText=\"Displays timer at the bottom of the store.\"\r\n                                id=\"Bottom\"\r\n                                name=\"Bottom\"\r\n                                checked={value === 'Bottom'}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Stack>\r\n                        <Checkbox\r\n                            label=\"Display sticky\"\r\n                            checked={checked}\r\n                            onChange={(newChecked) => {setChecked(newChecked)}}\r\n                        />\r\n                    </Card>\r\n                    <Card title={'Timer design'} sectioned>\r\n                        <div style={{display: 'flex', justifyContent:'space-around',width: '100%'}}>\r\n                            <div>\r\n                                <p style={{marginBottom: '10px'}}>Background color:</p>\r\n\r\n                                <Popover active={popoverActive} activator={activator} onClose={togglePopoverActive}\r\n                                         fluidContent={true} sectioned>\r\n                                    <ColorPicker color={bgColor} onChange={setBgColor}/>\r\n                                </Popover>\r\n                                <div style={{width: '100%', height: '40px', borderRadius: '5px',\r\n                                    backgroundColor: `hsla(${bgColor.hue}, ${bgColor.saturation*100}%, ${bgColor.brightness*100}%, ${bgColor.alpha})`, marginTop: '10px'}}/>\r\n                            </div>\r\n                            <div>\r\n                                <RangeSlider\r\n                                    label=\"Border size:\"\r\n                                    value={rangeValue}\r\n                                    onChange={handleRangeSliderChange}\r\n                                    min={0}\r\n                                    max={12}\r\n                                    output\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <p style={{marginBottom: '10px'}}>Border color:</p>\r\n\r\n                                <Popover active={borderPopover} activator={borderActivator} onClose={toggleBorderPopover}\r\n                                         fluidContent={true} sectioned>\r\n                                    <ColorPicker color={borderColor} onChange={setBorderColor}/>\r\n                                </Popover>\r\n                                <div style={{width: '100%', height: '40px', borderRadius: '5px',\r\n                                    backgroundColor: `hsla(${borderColor.hue}, ${borderColor.saturation*100}%, ${borderColor.brightness*100}%, ${borderColor.alpha})`, marginTop: '10px'}}/>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                    <div style={{marginTop: '25px'}}>\r\n                        <Link href={'/success'}>\r\n                        <Button\r\n                            primary\r\n                            size={\"large\"}\r\n                            type={\"submit\"}\r\n                            onClick={handleSubmit}\r\n                            disabled={!name}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        </Link>\r\n                    </div>\r\n                </Layout.Section>\r\n            </Layout>}\r\n        </Page>\r\n    )\r\n};\r\n\r\nexport default Initial\r\n"]},"metadata":{},"sourceType":"module"}