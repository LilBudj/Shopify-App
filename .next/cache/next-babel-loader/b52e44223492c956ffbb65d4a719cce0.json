{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        scriptTags(first: 5) {\\n            edges {\\n                node {\\n                    id\\n                    src\\n                    displayScope\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagDelete($id: ID!) {\\n        scriptTagDelete(id: $id) {\\n            deletedScriptTagId\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input: ScriptTagInput!) {\\n        scriptTagCreate(input: $input) {\\n            scriptTag {\\n                id\\n            }\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }       \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button, Card, Layout, Page, ResourceList } from \"@shopify/polaris\";\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar DELETE_SCRIPT_TAG = gql(_templateObject2());\nvar QUERY_SCRIPTTAGS = gql(_templateObject3());\n\nvar Scripts = function Scripts() {\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScript = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPT_TAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScript = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (!!loading) return __jsx(\"h1\", null, \"LOADING...\");\n  if (!!error) return __jsx(\"div\", null, error.message);\n  return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Timebar\"\n  })), !data && __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Create Timebar\",\n    sectioned: true\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: function onClick() {\n      createScript({\n        variables: {\n          input: {\n            src: \"https://47c3aa5c.ngrok.io/script.js\",\n            displayScope: \"ALL\"\n          },\n          refetchQueries: [{\n            query: QUERY_SCRIPTTAGS\n          }]\n        }\n      });\n    }\n  }, \"Create Bar\"))), !!data && __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Delete Timebar\",\n    sectioned: true\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: function onClick() {\n      deleteScript({\n        variables: {\n          id: data.scriptTags.edges[0].node.id,\n          refetchQueries: [{\n            query: QUERY_SCRIPTTAGS\n          }]\n        }\n      });\n    }\n  }, \"Delete Bar\"))), __jsx(Layout.Section, null, __jsx(Card, {\n    title: 'Bars',\n    sectioned: true\n  }, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: 'Bar',\n    items: data.scriptTags.edges,\n    renderItem: function renderItem(item) {\n      return __jsx(ResourceList.Item, {\n        id: item.id\n      }, __jsx(Stack, null, __jsx(Stack.Item, null, __jsx(\"p\", null, item.node.id)), __jsx(Stack.Item, null)));\n    }\n  })))));\n};\n\nexport default Scripts;","map":{"version":3,"sources":["D:/JSprojects/nextShopify/pages/scripts.js"],"names":["gql","useQuery","useMutation","Button","Card","Layout","Page","ResourceList","CREATE_SCRIPT_TAG","DELETE_SCRIPT_TAG","QUERY_SCRIPTTAGS","Scripts","createScript","deleteScript","loading","error","data","message","variables","input","src","displayScope","refetchQueries","query","id","scriptTags","edges","node","item"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\"\r\nimport {useQuery, useMutation} from \"@apollo/react-hooks\"\r\nimport {Button, Card, Layout, Page, ResourceList} from \"@shopify/polaris\";\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n    mutation scriptTagCreate($input: ScriptTagInput!) {\r\n        scriptTagCreate(input: $input) {\r\n            scriptTag {\r\n                id\r\n            }\r\n            userErrors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }       \r\n`;\r\n\r\nconst DELETE_SCRIPT_TAG = gql`\r\n    mutation scriptTagDelete($id: ID!) {\r\n        scriptTagDelete(id: $id) {\r\n            deletedScriptTagId\r\n            userErrors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst QUERY_SCRIPTTAGS = gql`\r\n    query {\r\n        scriptTags(first: 5) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    src\r\n                    displayScope\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Scripts = () => {\r\n\r\n    const [createScript] = useMutation(CREATE_SCRIPT_TAG);\r\n    const [deleteScript] = useMutation(DELETE_SCRIPT_TAG);\r\n    const {loading, error, data} = useQuery(QUERY_SCRIPTTAGS);\r\n\r\n    if (!!loading) return <h1>LOADING...</h1>;\r\n    if (!!error) return <div>{error.message}</div>;\r\n\r\n\r\n    return (\r\n        <Page>\r\n            <Layout>\r\n                <Layout.Section>\r\n                    <Card title={\"Timebar\"}>\r\n\r\n                    </Card>\r\n                </Layout.Section>\r\n                {!data && <Layout.Section>\r\n                    <Card title={\"Create Timebar\"} sectioned>\r\n                        <Button\r\n                            primary\r\n                            size={\"slim\"}\r\n                            type={\"submit\"}\r\n                            onClick={() => {\r\n                                createScript({\r\n                                    variables: {\r\n                                        input: {\r\n                                            src: \"https://47c3aa5c.ngrok.io/script.js\", displayScope: \"ALL\"\r\n                                        },\r\n                                        refetchQueries: [{query: QUERY_SCRIPTTAGS}]\r\n                                    }\r\n                                })\r\n                            }}\r\n                        >\r\n                            Create Bar\r\n                        </Button>\r\n                    </Card>\r\n                </Layout.Section>}\r\n                {!!data && <Layout.Section>\r\n                    <Card title={\"Delete Timebar\"} sectioned>\r\n                        <Button\r\n                            primary\r\n                            size={\"slim\"}\r\n                            type={\"submit\"}\r\n                            onClick={() => {\r\n                                deleteScript({\r\n                                    variables: {\r\n                                        id: data.scriptTags.edges[0].node.id,\r\n                                        refetchQueries: [{query: QUERY_SCRIPTTAGS}]\r\n                                    }\r\n                                })\r\n                            }}>\r\n                            Delete Bar\r\n                        </Button>\r\n                    </Card>\r\n                </Layout.Section>}\r\n                <Layout.Section>\r\n                    <Card title={'Bars'} sectioned>\r\n                        <ResourceList\r\n                            showHeader\r\n                            resourceName={'Bar'}\r\n                            items={data.scriptTags.edges}\r\n                            renderItem={item => {\r\n                                return (\r\n                                    <ResourceList.Item\r\n                                        id={item.id}\r\n                                    >\r\n                                        <Stack>\r\n                                            <Stack.Item>\r\n                                                <p>\r\n                                                    {item.node.id}\r\n                                                </p>\r\n                                            </Stack.Item>\r\n                                            <Stack.Item>\r\n                                            </Stack.Item>\r\n                                        </Stack>\r\n                                    </ResourceList.Item>\r\n                                )\r\n                            }}\r\n                        />\r\n                    </Card>\r\n                </Layout.Section>\r\n            </Layout>\r\n        </Page>\r\n    )\r\n};\r\n\r\nexport default Scripts;"]},"metadata":{},"sourceType":"module"}