{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        scriptTags(first: 5) {\\n            edges {\\n                node {\\n                    id\\n                    src\\n                    displayScope\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input: ScripttagInput!) {\\n        scriptTagCreate(input: $input) {\\n            scriptTag {\\n                id\\n            }\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }       \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar QUERY_SCRIPTTAGS = gql(_templateObject2());\n\nvar _useMutation = useMutation(CREATE_SCRIPT_TAG),\n    _useMutation2 = _slicedToArray(_useMutation, 1),\n    createScript = _useMutation2[0];\n\nvar Scripts = /*#__PURE__*/function (_React$Component) {\n  _inherits(Scripts, _React$Component);\n\n  function Scripts() {\n    _classCallCheck(this, Scripts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Scripts).apply(this, arguments));\n  }\n\n  _createClass(Scripts, [{\n    key: \"render\",\n    value: function render() {\n      var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n          loading = _useQuery.loading,\n          error = _useQuery.error,\n          data = _useQuery.data;\n\n      if (!!loading) return __jsx(\"h1\", null, \"LOADING...\");\n      if (!!error) return __jsx(\"div\", null, error.message);\n      return __jsx(\"div\", null, __jsx(\"h1\", null, \"Introduction to script tags\"), \"data.scriptTags.edges.map(i => \", __jsx(\"div\", {\n        key: i.node.id\n      }, i.node.id), \");\", __jsx(\"button\", {\n        type: 'primary',\n        onClick: function onClick() {\n          createScript({\n            variables: {\n              src: \"https://a80f8ee2.ngrok.io/\",\n              displayScope: \"ALL\"\n            }\n          });\n        }\n      }, \"Add script\"));\n    }\n  }]);\n\n  return Scripts;\n}(React.Component);\n\nexport default Scripts;","map":{"version":3,"sources":["D:/JSprojects/nextShopify/pages/scripts.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPTTAGS","createScript","Scripts","loading","error","data","message","i","node","id","variables","src","displayScope","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,qBAApC;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAcA,IAAMI,gBAAgB,GAAGJ,GAAH,oBAAtB;;mBAcuBE,WAAW,CAACC,iBAAD,C;;IAA3BE,Y;;IAEDC,O;;;;;;;;;;;6BACO;AAAA,sBAE0BL,QAAQ,CAACG,gBAAD,CAFlC;AAAA,UAEEG,OAFF,aAEEA,OAFF;AAAA,UAEWC,KAFX,aAEWA,KAFX;AAAA,UAEkBC,IAFlB,aAEkBA,IAFlB;;AAIL,UAAI,CAAC,CAACF,OAAN,EAAe,OAAO,+BAAP;AACf,UAAI,CAAC,CAACC,KAAN,EAAa,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAIT,aACI,mBACI,gDADJ,qCAGmC;AAAK,QAAA,GAAG,EAAEC,CAAC,CAACC,IAAF,CAAOC;AAAjB,SAAsBF,CAAC,CAACC,IAAF,CAAOC,EAA7B,CAHnC,QAKI;AAAQ,QAAA,IAAI,EAAE,SAAd;AACQ,QAAA,OAAO,EAAG,mBACV;AAACR,UAAAA,YAAY,CAAC;AAACS,YAAAA,SAAS,EAAE;AAACC,cAAAA,GAAG,EAAE,4BAAN;AAAoCC,cAAAA,YAAY,EAAE;AAAlD;AAAZ,WAAD,CAAZ;AAAoF;AAF7F,sBALJ,CADJ;AAYP;;;;EAtBiBC,KAAK,CAACC,S;;AAyB5B,eAAeZ,OAAf","sourcesContent":["import gql from \"graphql-tag\"\r\nimport {useQuery, useMutation} from \"@apollo/react-hooks\"\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n    mutation scriptTagCreate($input: ScripttagInput!) {\r\n        scriptTagCreate(input: $input) {\r\n            scriptTag {\r\n                id\r\n            }\r\n            userErrors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }       \r\n`;\r\n\r\nconst QUERY_SCRIPTTAGS = gql`\r\n    query {\r\n        scriptTags(first: 5) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    src\r\n                    displayScope\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst [createScript] = useMutation(CREATE_SCRIPT_TAG);\r\n\r\nclass Scripts extends React.Component{\r\n    render() {\r\n\r\n        const {loading, error, data} = useQuery(QUERY_SCRIPTTAGS);\r\n\r\n        if (!!loading) return <h1>LOADING...</h1>;\r\n        if (!!error) return <div>{error.message}</div>;\r\n\r\n\r\n\r\n            return (\r\n                <div>\r\n                    <h1>Introduction to script tags</h1>\r\n\r\n                    data.scriptTags.edges.map(i => <div key={i.node.id}>{i.node.id}</div>);\r\n\r\n                    <button type={'primary'}\r\n                            onClick={ () =>\r\n                            {createScript({variables: {src: \"https://a80f8ee2.ngrok.io/\", displayScope: \"ALL\"}})}\r\n                            }>Add script</button>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Scripts"]},"metadata":{},"sourceType":"module"}