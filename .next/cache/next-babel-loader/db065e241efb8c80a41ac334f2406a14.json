{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button, Card, Checkbox, ColorPicker, DatePicker, EmptyState, Layout, Page, RadioButton, ResourceList, Stack, TextField, Popover } from \"@shopify/polaris\";\nimport { useCallback, useState } from \"react\";\nimport axios from 'axios';\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input: ScriptTagInput!) {\n        scriptTagCreate(input: $input) {\n            scriptTag {\n                id\n            }\n            userErrors {\n                field\n                message\n            }\n        }\n    }       \n`;\nconst DELETE_SCRIPT_TAG = gql`\n    mutation scriptTagDelete($id: ID!) {\n        scriptTagDelete(id: $id) {\n            deletedScriptTagId\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\nconst QUERY_SCRIPTTAGS = gql`\n    query {\n        scriptTags(first: 5) {\n            edges {\n                node {\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\n\nconst Scripts = () => {\n  const [createScript] = useMutation(CREATE_SCRIPT_TAG);\n  const [deleteScript] = useMutation(DELETE_SCRIPT_TAG);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_SCRIPTTAGS);\n  const {\n    0: initBar,\n    1: setInitBar\n  } = useState(false);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: {\n      month,\n      year\n    },\n    1: setDate\n  } = useState({\n    month: 11,\n    year: 2019\n  });\n  const {\n    0: {\n      endMonth,\n      endYear\n    },\n    1: setSecondDate\n  } = useState({\n    endMonth: 6,\n    endYear: 2020\n  });\n  const {\n    0: selectedStartDate,\n    1: setSelectedStartDate\n  } = useState({\n    start: new Date()\n  });\n  const {\n    0: selectedEndDate,\n    1: setSelectedEndDate\n  } = useState({\n    end: new Date('Wed Aug 08 2020 00:00:00 GMT-0300 (EST)')\n  });\n  const handleMonthChange = useCallback((month, year) => setDate({\n    month,\n    year\n  }), []);\n  const handleEndMonthChange = useCallback((endMonth, endYear) => setSecondDate({\n    endMonth,\n    endYear\n  }), []);\n  const {\n    0: value,\n    1: setValue\n  } = useState('disabled');\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const {\n    0: bgColor,\n    1: setBgColor\n  } = useState('#ffffff');\n  const {\n    0: colorPicker,\n    1: enableColorPicker\n  } = useState(false);\n  const handleChange = useCallback((_checked, newValue) => setValue(newValue), []);\n  const {\n    0: popoverActive,\n    1: setPopoverActive\n  } = useState(true);\n  const togglePopoverActive = useCallback(() => setPopoverActive(popoverActive => !popoverActive), []);\n\n  const activator = __jsx(Button, {\n    onClick: togglePopoverActive,\n    disclosure: true\n  }, \"Background Color\");\n\n  const handleSubmit = async () => {\n    createScript({\n      variables: {\n        input: {\n          src: \"https://845c943d.ngrok.io/script.js\",\n          displayScope: \"ALL\"\n        },\n        refetchQueries: [{\n          query: QUERY_SCRIPTTAGS\n        }]\n      }\n    });\n    let res = await axios.post('https://845c943d.ngrok.io/api/scripts', {\n      name: name,\n      startDate: selectedStartDate,\n      endDate: selectedEndDate,\n      position: value,\n      sticky: checked\n    });\n    console.log(res);\n    setInitBar(false);\n  };\n\n  if (!!loading) return __jsx(\"h1\", null, \"LOADING...\");\n  if (!!error) return __jsx(\"div\", null, error.message);\n  return __jsx(Page, null, !initBar && __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Timebar\"\n  })), !data.scriptTags.edges.length && __jsx(Layout.Section, null, __jsx(EmptyState, {\n    heading: \"Time Banner\",\n    image: 'https://sct.spur-i-t.com/img/icons/empty-state.svg'\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: () => {\n      setInitBar(true);\n    }\n  }, \"Create Bar\"))), !!data.scriptTags.edges.length && __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Delete Timebar\",\n    sectioned: true\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: () => {\n      deleteScript({\n        variables: {\n          id: data.scriptTags.edges[0].node.id,\n          refetchQueries: [{\n            query: QUERY_SCRIPTTAGS\n          }]\n        }\n      });\n    }\n  }, \"Delete Bar\")))), initBar && __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: 'Banner name:',\n    sectioned: true\n  }, __jsx(TextField, {\n    label: 'name',\n    value: name,\n    onChange: value => {\n      setName(value);\n    }\n  })), __jsx(Card, {\n    title: 'Start time',\n    sectioned: true\n  }, __jsx(DatePicker, {\n    month: month,\n    year: year,\n    onChange: setSelectedStartDate,\n    onMonthChange: handleMonthChange,\n    selected: selectedStartDate\n  })), __jsx(Card, {\n    title: 'End Time',\n    sectioned: true\n  }, __jsx(DatePicker, {\n    month: endMonth,\n    year: endYear,\n    onChange: setSelectedEndDate,\n    onMonthChange: handleEndMonthChange,\n    selected: selectedEndDate,\n    size: 'slim'\n  })), __jsx(Card, {\n    title: 'Timer display',\n    sectioned: true\n  }, __jsx(Stack, {\n    vertical: true\n  }, __jsx(RadioButton, {\n    label: \"Top\",\n    helpText: \"Displays timer at the top of the store.\",\n    checked: value === 'Top',\n    id: 'top',\n    name: \"top\",\n    onChange: handleChange\n  }), __jsx(RadioButton, {\n    label: \"Bottom\",\n    helpText: \"Displays timer at the bottom of the store.\",\n    id: \"bottom\",\n    name: \"bottom\",\n    checked: value === 'Bottom',\n    onChange: handleChange\n  })), __jsx(Checkbox, {\n    label: \"Display sticky\",\n    checked: checked,\n    onChange: newChecked => {\n      setChecked(newChecked);\n    }\n  })), __jsx(Card, {\n    title: 'Timer design',\n    sectioned: true\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'spaceBetween',\n      width: '100%'\n    }\n  }, __jsx(\"div\", null, __jsx(\"p\", {\n    style: {\n      marginBottom: '10px'\n    }\n  }, \"Background color:\"), __jsx(Popover, {\n    active: popoverActive,\n    activator: activator,\n    onClose: togglePopoverActive,\n    fluidContent: true,\n    sectioned: true\n  }, __jsx(ColorPicker, {\n    color: bgColor,\n    onChange: setBgColor\n  }))), __jsx(\"div\", null, __jsx(\"p\", {\n    style: {\n      marginBottom: '10px'\n    }\n  }, \"Border color:\"), __jsx(Popover, {\n    active: popoverActive,\n    activator: activator,\n    onClose: togglePopoverActive,\n    fluidContent: true,\n    sectioned: true\n  }, __jsx(ColorPicker, {\n    color: bgColor,\n    onChange: setBgColor\n  }))))), __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: handleSubmit\n  }, \"Save\"))));\n};\n\nexport default Scripts;","map":{"version":3,"sources":["D:/JSprojects/nextShopify/pages/scripts.js"],"names":["gql","useQuery","useMutation","Button","Card","Checkbox","ColorPicker","DatePicker","EmptyState","Layout","Page","RadioButton","ResourceList","Stack","TextField","Popover","useCallback","useState","axios","CREATE_SCRIPT_TAG","DELETE_SCRIPT_TAG","QUERY_SCRIPTTAGS","Scripts","createScript","deleteScript","loading","error","data","initBar","setInitBar","name","setName","month","year","setDate","endMonth","endYear","setSecondDate","selectedStartDate","setSelectedStartDate","start","Date","selectedEndDate","setSelectedEndDate","end","handleMonthChange","handleEndMonthChange","value","setValue","checked","setChecked","bgColor","setBgColor","colorPicker","enableColorPicker","handleChange","_checked","newValue","popoverActive","setPopoverActive","togglePopoverActive","activator","handleSubmit","variables","input","src","displayScope","refetchQueries","query","res","post","startDate","endDate","position","sticky","console","log","message","scriptTags","edges","length","id","node","newChecked","display","justifyContent","width","marginBottom"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\"\r\nimport {useQuery, useMutation} from \"@apollo/react-hooks\"\r\nimport {\r\n    Button,\r\n    Card, Checkbox, ColorPicker,\r\n    DatePicker,\r\n    EmptyState,\r\n    Layout,\r\n    Page,\r\n    RadioButton,\r\n    ResourceList, Stack,\r\n    TextField, Popover\r\n} from \"@shopify/polaris\";\r\nimport {useCallback, useState} from \"react\";\r\nimport axios from 'axios'\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n    mutation scriptTagCreate($input: ScriptTagInput!) {\r\n        scriptTagCreate(input: $input) {\r\n            scriptTag {\r\n                id\r\n            }\r\n            userErrors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }       \r\n`;\r\n\r\nconst DELETE_SCRIPT_TAG = gql`\r\n    mutation scriptTagDelete($id: ID!) {\r\n        scriptTagDelete(id: $id) {\r\n            deletedScriptTagId\r\n            userErrors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst QUERY_SCRIPTTAGS = gql`\r\n    query {\r\n        scriptTags(first: 5) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    src\r\n                    displayScope\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Scripts = () => {\r\n\r\n    const [createScript] = useMutation(CREATE_SCRIPT_TAG);\r\n    const [deleteScript] = useMutation(DELETE_SCRIPT_TAG);\r\n    const {loading, error, data} = useQuery(QUERY_SCRIPTTAGS);\r\n    const [initBar, setInitBar] = useState(false);\r\n    const [name, setName] = useState('');\r\n\r\n    const [{month, year}, setDate] = useState({\r\n        month: 11,\r\n        year: 2019,\r\n    });\r\n    const [{endMonth, endYear}, setSecondDate] = useState({\r\n        endMonth: 6,\r\n        endYear: 2020\r\n    });\r\n    const [selectedStartDate, setSelectedStartDate] = useState({\r\n        start: new Date(),\r\n    });\r\n    const [selectedEndDate, setSelectedEndDate] = useState({\r\n        end: new Date('Wed Aug 08 2020 00:00:00 GMT-0300 (EST)'),\r\n    });\r\n\r\n    const handleMonthChange = useCallback(\r\n        (month, year) => setDate({month, year}),\r\n        [],\r\n    );\r\n    const handleEndMonthChange = useCallback(\r\n        (endMonth, endYear) => setSecondDate({endMonth, endYear}),\r\n        [],\r\n    );\r\n\r\n    const [value, setValue] = useState('disabled');\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const [bgColor, setBgColor] = useState('#ffffff');\r\n    const [colorPicker, enableColorPicker] = useState(false);\r\n\r\n    const handleChange = useCallback(\r\n        (_checked, newValue) => setValue(newValue),\r\n        [],\r\n    );\r\n\r\n    const [popoverActive, setPopoverActive] = useState(true);\r\n\r\n    const togglePopoverActive = useCallback(() => setPopoverActive(popoverActive => !popoverActive), []);\r\n    const activator = <Button onClick={togglePopoverActive} disclosure>\r\n        Background\r\n        Color\r\n    </Button>;\r\n\r\n    const handleSubmit = async () => {\r\n        createScript({\r\n            variables: {\r\n                input: {\r\n                    src: \"https://845c943d.ngrok.io/script.js\",\r\n                    displayScope: \"ALL\"\r\n                },\r\n                refetchQueries: [{query: QUERY_SCRIPTTAGS}]\r\n            }\r\n        });\r\n        let res = await axios.post('https://845c943d.ngrok.io/api/scripts',\r\n            {\r\n                name: name,\r\n                startDate: selectedStartDate,\r\n                endDate: selectedEndDate,\r\n                position: value,\r\n                sticky: checked\r\n            });\r\n        console.log(res);\r\n        setInitBar(false);\r\n    };\r\n\r\n    if (!!loading) return <h1>LOADING...</h1>;\r\n    if (!!error) return <div>{error.message}</div>;\r\n\r\n    return (\r\n        <Page>\r\n            {!initBar && <Layout>\r\n                <Layout.Section>\r\n                    <Card title={\"Timebar\"}>\r\n\r\n                    </Card>\r\n                </Layout.Section>\r\n                {!(data.scriptTags.edges.length) && <Layout.Section>\r\n                    <EmptyState\r\n                        heading={\"Time Banner\"}\r\n                    image={'https://sct.spur-i-t.com/img/icons/empty-state.svg'}>\r\n                        <Button\r\n                            primary\r\n                            size={\"slim\"}\r\n                            type={\"submit\"}\r\n                            onClick={() => {\r\n                                setInitBar(true)\r\n                            }}\r\n                        >\r\n                            Create Bar\r\n                        </Button>\r\n                    </EmptyState>\r\n                </Layout.Section>}\r\n                {!!(data.scriptTags.edges.length) && <Layout.Section>\r\n                    <Card title={\"Delete Timebar\"} sectioned>\r\n                        <Button\r\n                            primary\r\n                            size={\"slim\"}\r\n                            type={\"submit\"}\r\n                            onClick={() => {\r\n                                deleteScript({\r\n                                    variables: {\r\n                                        id: data.scriptTags.edges[0].node.id,\r\n                                        refetchQueries: [{query: QUERY_SCRIPTTAGS}]\r\n                                    }\r\n                                })\r\n                            }}>\r\n                            Delete Bar\r\n                        </Button>\r\n                    </Card>\r\n                </Layout.Section>}\r\n            </Layout>}\r\n            {initBar && <Layout>\r\n                <Layout.Section>\r\n                    <Card title={'Banner name:'} sectioned>\r\n                        <TextField\r\n                            label={'name'}\r\n                            value={name}\r\n                            onChange={(value) => {setName(value)}}\r\n                        />\r\n                    </Card>\r\n                    <Card title={'Start time'} sectioned>\r\n                        <DatePicker\r\n                            month={month}\r\n                            year={year}\r\n                            onChange={setSelectedStartDate}\r\n                            onMonthChange={handleMonthChange}\r\n                            selected={selectedStartDate}\r\n                        />\r\n                    </Card>\r\n                    <Card title={'End Time'} sectioned>\r\n                        <DatePicker\r\n                            month={endMonth}\r\n                            year={endYear}\r\n                            onChange={setSelectedEndDate}\r\n                            onMonthChange={handleEndMonthChange}\r\n                            selected={selectedEndDate}\r\n                            size={'slim'}\r\n                        />\r\n                    </Card>\r\n                    <Card title={'Timer display'} sectioned>\r\n                        <Stack vertical>\r\n                            <RadioButton\r\n                                label=\"Top\"\r\n                                helpText=\"Displays timer at the top of the store.\"\r\n                                checked={value === 'Top'}\r\n                                id={'top'}\r\n                                name=\"top\"\r\n                                onChange={handleChange}\r\n                            />\r\n                            <RadioButton\r\n                                label=\"Bottom\"\r\n                                helpText=\"Displays timer at the bottom of the store.\"\r\n                                id=\"bottom\"\r\n                                name=\"bottom\"\r\n                                checked={value === 'Bottom'}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Stack>\r\n                        <Checkbox\r\n                            label=\"Display sticky\"\r\n                            checked={checked}\r\n                            onChange={(newChecked) => {setChecked(newChecked)}}\r\n                        />\r\n                    </Card>\r\n                    <Card title={'Timer design'} sectioned>\r\n                        <div style={{display: 'flex', justifyContent: 'spaceBetween', width: '100%'}}>\r\n                        <div>\r\n                        <p style={{marginBottom: '10px'}}>Background color:</p>\r\n\r\n                        <Popover active={popoverActive} activator={activator} onClose={togglePopoverActive}\r\n                                 fluidContent={true} sectioned>\r\n                            <ColorPicker color={bgColor} onChange={setBgColor}/>\r\n                        </Popover>\r\n                        </div>\r\n                            <div>\r\n                                <p style={{marginBottom: '10px'}}>Border color:</p>\r\n\r\n                                <Popover active={popoverActive} activator={activator} onClose={togglePopoverActive}\r\n                                         fluidContent={true} sectioned>\r\n                                    <ColorPicker color={bgColor} onChange={setBgColor}/>\r\n                                </Popover>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                    <Button\r\n                        primary\r\n                        size={\"slim\"}\r\n                        type={\"submit\"}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </Layout.Section>\r\n            </Layout>}\r\n        </Page>\r\n    )\r\n};\r\n\r\nexport default Scripts"]},"metadata":{},"sourceType":"module"}