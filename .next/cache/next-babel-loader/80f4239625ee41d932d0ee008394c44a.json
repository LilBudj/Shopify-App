{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        scriptTags(first: 5) {\\n            edges {\\n                node {\\n                    id\\n                    src\\n                    displayScope\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagDelete($id: ID!) {\\n        scriptTagDelete(id: $id) {\\n            deletedScriptTagId\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input: ScriptTagInput!) {\\n        scriptTagCreate(input: $input) {\\n            scriptTag {\\n                id\\n            }\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }       \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button, Card, Checkbox, ColorPicker, DatePicker, EmptyState, Layout, Page, InlineError, RadioButton, ResourceList, Stack, TextField, Popover, RangeSlider } from \"@shopify/polaris\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport Link from 'next/link';\nimport axios from 'axios';\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar DELETE_SCRIPT_TAG = gql(_templateObject2());\nvar QUERY_SCRIPTTAGS = gql(_templateObject3());\n\nvar Initial = function Initial() {\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var res;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get('http://shopify-sale-banner.us-west-1.elasticbeanstalk.com/api/scripts'));\n\n            case 2:\n              res = _context.sent;\n              debugger;\n              return _context.abrupt(\"return\", res.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    fetchConfig(fetchData());\n  }, []);\n\n  var _useState = useState(false),\n      config = _useState[0],\n      fetchConfig = _useState[1];\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScript = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPT_TAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScript = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState2 = useState(false),\n      initBar = _useState2[0],\n      setInitBar = _useState2[1];\n\n  var _useState3 = useState('Timer'),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var _useState4 = useState({\n    month: 4,\n    year: 2020\n  }),\n      _useState4$ = _useState4[0],\n      month = _useState4$.month,\n      year = _useState4$.year,\n      setDate = _useState4[1];\n\n  var _useState5 = useState({\n    endMonth: 6,\n    endYear: 2020\n  }),\n      _useState5$ = _useState5[0],\n      endMonth = _useState5$.endMonth,\n      endYear = _useState5$.endYear,\n      setSecondDate = _useState5[1];\n\n  var _useState6 = useState({\n    start: new Date()\n  }),\n      selectedStartDate = _useState6[0],\n      setSelectedStartDate = _useState6[1];\n\n  var _useState7 = useState({\n    end: new Date('Wed Aug 08 2020 00:00:00 GMT-0300 (EST)')\n  }),\n      selectedEndDate = _useState7[0],\n      setSelectedEndDate = _useState7[1];\n\n  var handleMonthChange = useCallback(function (month, year) {\n    return setDate({\n      month: month,\n      year: year\n    });\n  }, []);\n  var handleEndMonthChange = useCallback(function (endMonth, endYear) {\n    return setSecondDate({\n      endMonth: endMonth,\n      endYear: endYear\n    });\n  }, []);\n\n  var _useState8 = useState('Top'),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var _useState9 = useState(false),\n      checked = _useState9[0],\n      setChecked = _useState9[1];\n\n  var _useState10 = useState({\n    hue: 1,\n    saturation: 1,\n    brightness: 1,\n    alpha: 1\n  }),\n      bgColor = _useState10[0],\n      setBgColor = _useState10[1];\n\n  var _useState11 = useState({\n    hue: 1,\n    saturation: 1,\n    brightness: 1,\n    alpha: 1\n  }),\n      borderColor = _useState11[0],\n      setBorderColor = _useState11[1];\n\n  var handleChange = useCallback(function (_checked, newValue) {\n    return setValue(newValue);\n  }, []);\n\n  var _useState12 = useState(true),\n      popoverActive = _useState12[0],\n      setPopoverActive = _useState12[1];\n\n  var _useState13 = useState(true),\n      borderPopover = _useState13[0],\n      setBorderPopover = _useState13[1];\n\n  var togglePopoverActive = useCallback(function () {\n    return setPopoverActive(function (popoverActive) {\n      return !popoverActive;\n    });\n  }, []);\n  var toggleBorderPopover = useCallback(function () {\n    return setBorderPopover(function (popoverActive) {\n      return !popoverActive;\n    });\n  }, []);\n\n  var activator = __jsx(Button, {\n    onClick: togglePopoverActive,\n    disclosure: true\n  }, \"Background color\");\n\n  var borderActivator = __jsx(Button, {\n    onClick: toggleBorderPopover,\n    disclosure: true\n  }, \"Border color\");\n\n  var _useState14 = useState(0),\n      rangeValue = _useState14[0],\n      setRangeValue = _useState14[1];\n\n  var handleRangeSliderChange = useCallback(function (value) {\n    return setRangeValue(value);\n  }, []);\n\n  var handleSubmit = function handleSubmit() {\n    var res;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            createScript({\n              variables: {\n                input: {\n                  src: \"http://shopify-sale-banner.us-west-1.elasticbeanstalk.com/script.js\",\n                  displayScope: \"ALL\"\n                },\n                refetchQueries: [{\n                  query: QUERY_SCRIPTTAGS\n                }]\n              }\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('http://shopify-sale-banner.us-west-1.elasticbeanstalk.com/api/scripts', {\n              name: name,\n              startDate: selectedStartDate,\n              endDate: selectedEndDate,\n              position: value,\n              sticky: checked,\n              backGroundColor: bgColor,\n              borderSize: rangeValue,\n              borderColor: borderColor\n            }));\n\n          case 3:\n            res = _context2.sent;\n            console.log(res);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var deleteSubmit = function deleteSubmit() {\n    deleteScript({\n      variables: {\n        id: data.scriptTags.edges[0].node.id,\n        refetchQueries: [{\n          query: QUERY_SCRIPTTAGS\n        }]\n      }\n    });\n    axios[\"delete\"]('http://shopify-sale-banner.us-west-1.elasticbeanstalk.com/api/scripts').then(function (res) {\n      console.log(res);\n    });\n  };\n\n  if (!!loading) return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: '100%',\n      fontSize: '30px',\n      fontWeight: '700'\n    }\n  }, \"LOADING...\");\n  if (!!error) return __jsx(\"div\", null, error.message);\n  debugger;\n  return __jsx(Page, null, !initBar && __jsx(Layout, null, !data.scriptTags.edges.length && __jsx(Layout.Section, null, __jsx(EmptyState, {\n    heading: \"Sale Banner\",\n    image: 'https://sct.spur-i-t.com/img/icons/empty-state.svg'\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: function onClick() {\n      setInitBar(true);\n    }\n  }, \"Create Banner\"))), !!data.scriptTags.edges.length && __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Existing Banner:\",\n    sectioned: true\n  }, __jsx(\"p\", null, config.data ? config.data.name : \"\"), __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: deleteSubmit\n  }, \"Delete Banner\")))), initBar && __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: 'Banner name:',\n    sectioned: true\n  }, __jsx(TextField, {\n    label: 'Name',\n    value: name,\n    onChange: function onChange(value) {\n      setName(value);\n    },\n    error: !name ? 'Please enter name' : ''\n  })), __jsx(Card, {\n    title: 'Start time',\n    sectioned: true\n  }, __jsx(DatePicker, {\n    month: month,\n    year: year,\n    onChange: setSelectedStartDate,\n    onMonthChange: handleMonthChange,\n    selected: selectedStartDate\n  })), __jsx(Card, {\n    title: 'End Time',\n    sectioned: true\n  }, __jsx(DatePicker, {\n    month: endMonth,\n    year: endYear,\n    onChange: setSelectedEndDate,\n    onMonthChange: handleEndMonthChange,\n    selected: selectedEndDate,\n    size: 'slim'\n  })), __jsx(Card, {\n    title: 'Timer display',\n    sectioned: true\n  }, __jsx(Stack, {\n    vertical: true\n  }, __jsx(RadioButton, {\n    label: \"Top\",\n    helpText: \"Displays timer at the top of the store.\",\n    checked: value === 'Top',\n    id: 'Top',\n    name: \"Top\",\n    onChange: handleChange\n  }), __jsx(RadioButton, {\n    label: \"Bottom\",\n    helpText: \"Displays timer at the bottom of the store.\",\n    id: \"Bottom\",\n    name: \"Bottom\",\n    checked: value === 'Bottom',\n    onChange: handleChange\n  })), __jsx(Checkbox, {\n    label: \"Display sticky\",\n    checked: checked,\n    onChange: function onChange(newChecked) {\n      setChecked(newChecked);\n    }\n  })), __jsx(Card, {\n    title: 'Timer design',\n    sectioned: true\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      width: '100%'\n    }\n  }, __jsx(\"div\", null, __jsx(\"p\", {\n    style: {\n      marginBottom: '10px'\n    }\n  }, \"Background color:\"), __jsx(Popover, {\n    active: popoverActive,\n    activator: activator,\n    onClose: togglePopoverActive,\n    fluidContent: true,\n    sectioned: true\n  }, __jsx(ColorPicker, {\n    color: bgColor,\n    onChange: setBgColor\n  })), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '40px',\n      borderRadius: '5px',\n      backgroundColor: \"hsla(\".concat(bgColor.hue, \", \").concat(bgColor.saturation * 100, \"%, \").concat(bgColor.brightness * 100, \"%, \").concat(bgColor.alpha, \")\"),\n      marginTop: '10px'\n    }\n  })), __jsx(\"div\", null, __jsx(RangeSlider, {\n    label: \"Border size:\",\n    value: rangeValue,\n    onChange: handleRangeSliderChange,\n    min: 0,\n    max: 12,\n    output: true\n  })), __jsx(\"div\", null, __jsx(\"p\", {\n    style: {\n      marginBottom: '10px'\n    }\n  }, \"Border color:\"), __jsx(Popover, {\n    active: borderPopover,\n    activator: borderActivator,\n    onClose: toggleBorderPopover,\n    fluidContent: true,\n    sectioned: true\n  }, __jsx(ColorPicker, {\n    color: borderColor,\n    onChange: setBorderColor\n  })), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '40px',\n      borderRadius: '5px',\n      backgroundColor: \"hsla(\".concat(borderColor.hue, \", \").concat(borderColor.saturation * 100, \"%, \").concat(borderColor.brightness * 100, \"%, \").concat(borderColor.alpha, \")\"),\n      marginTop: '10px'\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginTop: '25px'\n    }\n  }, __jsx(Link, {\n    href: '/success'\n  }, __jsx(Button, {\n    primary: true,\n    size: \"large\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    disabled: !name\n  }, \"Save\"))))));\n};\n\nexport default Initial;","map":null,"metadata":{},"sourceType":"module"}